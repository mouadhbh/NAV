OBJECT Page 1310 Mini Activities
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Activities;
               FRA=Activit‚s];
    SourceTable=Table1313;
    PageType=CardPart;
    ShowFilter=No;
    OnInit=BEGIN
             UpdateGroupsVisibility;
             AutoPlayWelcomeVideo := VideoVisible AND MiniGettingStartedMgt.ShouldWelcomeVideoBePlayed;
           END;

    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;
                 SETFILTER("Due Date Filter",'>=%1',WORKDATE);
                 SETFILTER("Overdue Date Filter",'<%1',WORKDATE);
                 SETFILTER("User ID Filter",USERID);

                 HasCamera := CameraProvider.IsAvailable;
                 IF HasCamera THEN
                   CameraProvider := CameraProvider.Create;
               END;

    OnAfterGetRecord=VAR
                       DocExchServiceSetup@1000 : Record 1275;
                     BEGIN
                       CalculateCueFieldValues;
                       ShowDocumentsPendingDocExchService := FALSE;
                       IF DocExchServiceSetup.GET THEN
                         ShowDocumentsPendingDocExchService := DocExchServiceSetup.Enabled;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           IF GettingStartedVisible <> MiniGettingStartedMgt.IsGettingStartedVisible THEN BEGIN
                             UpdateGroupsVisibility;
                             CurrPage.UPDATE;
                           END;
                         END;

    ActionList=ACTIONS
    {
      { 6       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;Action    ;
                      Name=Set Up Cues;
                      CaptionML=[ENU=Set Up Cues;
                                 FRA=Param‚trer piles];
                      Image=Setup;
                      OnAction=VAR
                                 CueRecordRef@1000 : RecordRef;
                               BEGIN
                                 CueRecordRef.GETTABLE(Rec);
                                 CueSetup.OpenCustomizePageForCurrentUser(CueRecordRef.NUMBER);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 16  ;1   ;Group     ;
                CaptionML=[ENU=Getting Started;
                           FRA=Mise en route];
                Visible=GettingStartedVisible;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 12      ;    ;Action    ;
                                  Name=WelcomeIntroductionVideo;
                                  CaptionML=[ENU=Welcome!;
                                             FRA=Bienvenueÿ!];
                                  ToolTipML=[ENU=Watch a short video to learn five things you need to know first.;
                                             FRA=Regardez une brŠve vid‚o pour d‚couvrir 5ÿchoses que vous devez connaŒtre au pr‚alable.];
                                  Visible=VideoVisible;
                                  Image=TileVideo;
                                  OnAction=BEGIN
                                             MiniGettingStartedMgt.PlayWelcomeVideoForWebClient;
                                           END;
                                            }
                  { 14      ;    ;Action    ;
                                  Name=SettingupYourSystem;
                                  CaptionML=[ENU=Setting Up Your System;
                                             FRA=Param‚trage de votre systŠme];
                                  ToolTipML=[ENU=Watch a video to learn how to set up the system for your needs.;
                                             FRA=Regardez une vid‚o pour d‚couvrir comment param‚trer le systŠme selon vos besoins.];
                                  Visible=VideoVisible;
                                  Image=TileVideo;
                                  OnAction=BEGIN
                                             CASE CURRENTCLIENTTYPE OF
                                               CLIENTTYPE::Tablet:
                                                 MiniGettingStartedMgt.PlaySettingUpYourSystemVideoForTablet;
                                               ELSE
                                                 MiniGettingStartedMgt.PlaySettingUpYourSystemVideoForWebClient;
                                             END;
                                           END;
                                            }
                  { 13      ;    ;Action    ;
                                  Name=ManageYourBusiness;
                                  CaptionML=[ENU=Manage Your Business;
                                             FRA=Gestion de votre entreprise];
                                  ToolTipML=[ENU=Learn about how to do your business tasks.;
                                             FRA=D‚couvrez comment ex‚cuter vos tƒches professionnelles.];
                                  Image=TileHelp }
                }
                 }

    { 10  ;1   ;Group     ;
                CaptionML=[ENU=Sales;
                           FRA=Ventes];
                GroupType=CueGroup }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Shows the number of open sales invoices.;
                           FRA=Affiche le nombre de factures vente ouvertes.];
                SourceExpr="Ongoing Sales Invoices";
                DrillDownPageID=Mini Sales Invoice List }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Shows the number of open sales quotes.;
                           FRA=Affiche le nombre de devis ouverts.];
                SourceExpr="Ongoing Sales Quotes";
                DrillDownPageID=Mini Sales Quotes List }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Shows the sum of overdue payments from customers.;
                           FRA=Affiche la somme des paiements dus par des clients.];
                SourceExpr="Overdue Sales Invoice Amount";
                OnDrillDown=BEGIN
                              MiniActivitiesMgt.DrillDownCalcOverdueSalesInvoiceAmount;
                            END;
                             }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Shows the sum of sales in the current month.;
                           FRA=Affichez la somme des ventes du mois en cours.];
                SourceExpr="Sales This Month";
                DrillDownPageID=Mini Sales Invoice List;
                OnDrillDown=BEGIN
                              MiniActivitiesMgt.DrillDownSalesThisMonth;
                            END;
                             }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=The share of sales this year made to the ten largest customers.;
                           FRA=Proportion des ventes aux dixÿprincipaux clients cette ann‚e.];
                SourceExpr="Top 10 Customer Sales YTD" }

    { 28  ;1   ;Group     ;
                CaptionML=[ENU=Document Exchange Service;
                           FRA=Service d'‚change de documents];
                Visible=ShowDocumentsPendingDocExchService;
                GroupType=CueGroup }

    { 27  ;2   ;Field     ;
                SourceExpr="Sales Inv. - Pending Doc.Exch.";
                Visible=ShowDocumentsPendingDocExchService;
                DrillDownPageID=Mini Posted Sales Invoices }

    { 26  ;2   ;Field     ;
                SourceExpr="Sales CrM. - Pending Doc.Exch.";
                Visible=ShowDocumentsPendingDocExchService;
                DrillDownPageID=Mini Posted Sales Credit Memos }

    { 9   ;1   ;Group     ;
                CaptionML=[ENU=Purchases;
                           FRA=Achats];
                GroupType=CueGroup }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Shows the number of open purchase invoices.;
                           FRA=Affiche le nombre de factures achat ouvertes.];
                SourceExpr="Ongoing Purchase Invoices";
                DrillDownPageID=Mini Purchase Invoice List }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Shows the sum of your overdue payments to vendors.;
                           FRA=Affiche la somme des paiements que vous devez … des fournisseurs.];
                SourceExpr="Overdue Purch. Invoice Amount";
                OnDrillDown=BEGIN
                              MiniActivitiesMgt.DrillDownOverduePurchaseInvoiceAmount;
                            END;
                             }

    { 24  ;1   ;Group     ;
                CaptionML=[ENU=Approvals;
                           FRA=Approbations];
                Visible=FALSE;
                GroupType=CueGroup }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Shows the number of approval requests that require your approval.;
                           FRA=Affiche le nombre de demandes d'approbation que vous devez approuver.];
                SourceExpr="Requests to Approve";
                DrillDownPageID=Requests to Approve }

    { 8   ;1   ;Group     ;
                CaptionML=[ENU=Financial Performance;
                           FRA=Performances financiŠres];
                GroupType=CueGroup }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how long customers took to pay invoices in the last three months. This is the average number of days from when invoices are issued to when customers pay the invoices.;
                           FRA=Sp‚cifie le d‚lai aprŠs lequel les clients ont pay‚ les factures au cours des trois derniers mois. Il s'agit du nombre moyen de jours entre la date d'‚mission des factures et le moment o— les clients les paient.];
                SourceExpr="Average Collection Days";
                Image=Calendar }

    { 33  ;1   ;Group     ;
                CaptionML=[ENU=Camera;
                           FRA=Appareil photo];
                Visible=HasCamera;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 21      ;    ;Action    ;
                                  Name=CreateIncomingDocumentFromCamera;
                                  CaptionML=[ENU=Create Incoming Doc. from Camera;
                                             FRA=Cr‚er un document entrant … partir de l'appareil photo];
                                  Image=TileCamera;
                                  OnAction=VAR
                                             CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                                           BEGIN
                                             IF NOT HasCamera THEN
                                               EXIT;

                                             CameraOptions := CameraOptions.CameraOptions;
                                             CameraOptions.Quality := 100; // 100%
                                             CameraProvider.RequestPictureAsync(CameraOptions);
                                           END;
                                            }
                }
                 }

    { 34  ;1   ;Group     ;
                CaptionML=[ENU=Incoming Documents;
                           FRA=Documents entrants];
                GroupType=CueGroup }

    { 30  ;2   ;Field     ;
                SourceExpr="My Incoming Documents" }

    { 15  ;1   ;Group     ;
                Visible=AutoPlayWelcomeVideo;
                GroupType=Group }

    { 11  ;2   ;Field     ;
                Name=WebClientPageReady;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.PageReady;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      MiniGettingStartedMgt@1001 : Codeunit 1321;
      FileManagement@1003 : Codeunit 419;
      MiniActivitiesMgt@1009 : Codeunit 1311;
      CueSetup@1005 : Codeunit 9701;
      CameraProvider@1007 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      GettingStartedVisible@1002 : Boolean INDATASET;
      VideoVisible@1000 : Boolean INDATASET;
      AutoPlayWelcomeVideo@1004 : Boolean INDATASET;
      HasCamera@1008 : Boolean;
      ShowDocumentsPendingDocExchService@1006 : Boolean;

    LOCAL PROCEDURE CalculateCueFieldValues@6();
    BEGIN
      IF FIELDACTIVE("Overdue Sales Invoice Amount") THEN
        "Overdue Sales Invoice Amount" := MiniActivitiesMgt.CalcOverdueSalesInvoiceAmount;
      IF FIELDACTIVE("Overdue Purch. Invoice Amount") THEN
        "Overdue Purch. Invoice Amount" := MiniActivitiesMgt.CalcOverduePurchaseInvoiceAmount;
      IF FIELDACTIVE("Sales This Month") THEN
        "Sales This Month" := MiniActivitiesMgt.CalcSalesThisMonthAmount;
      IF FIELDACTIVE("Top 10 Customer Sales YTD") THEN
        "Top 10 Customer Sales YTD" := MiniActivitiesMgt.CalcTop10CustomerSalesRatioYTD;
      IF FIELDACTIVE("Average Collection Days") THEN
        "Average Collection Days" := MiniActivitiesMgt.CalcAverageCollectionDays;
    END;

    LOCAL PROCEDURE WelcomeVideoDisplayTargetIsSupported@4() : Boolean;
    BEGIN
      EXIT(CURRENTCLIENTTYPE = CLIENTTYPE::Web);
    END;

    LOCAL PROCEDURE UpdateGroupsVisibility@9();
    BEGIN
      GettingStartedVisible := MiniGettingStartedMgt.IsGettingStartedVisible;
      VideoVisible := GettingStartedVisible AND WelcomeVideoDisplayTargetIsSupported;
    END;

    EVENT WebClientPageReady@-11::AddInReady@0();
    BEGIN
      IF FileManagement.IsWebClient THEN
        MiniGettingStartedMgt.PlayWelcomeVideoOnFirstLogin;
    END;

    EVENT CameraProvider@1007::PictureAvailable@10(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    VAR
      IncomingDocument@1002 : Record 130;
    BEGIN
      IncomingDocument.CreateIncomingDocumentFromServerFile(PictureName,PictureFilePath);
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

