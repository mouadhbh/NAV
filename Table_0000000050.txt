OBJECT Table 50 Accounting Period
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00;
    Version List=NAVW19.00,NAVFR9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               AccountingPeriod2 := Rec;
               IF AccountingPeriod2.FIND('>') THEN
                 AccountingPeriod2.TESTFIELD("Date Locked",FALSE);
               UpdateAvgItems(1);
             END;

    OnModify=BEGIN
               UpdateAvgItems(2);
             END;

    OnDelete=BEGIN
               TESTFIELD("Date Locked",FALSE);
               "New Fiscal Year" := FALSE;
               VALIDATE("New Fiscal Year");
               UpdateAvgItems(3);
             END;

    OnRename=BEGIN
               TESTFIELD("Date Locked",FALSE);
               AccountingPeriod2 := Rec;
               IF AccountingPeriod2.FIND('>') THEN
                 AccountingPeriod2.TESTFIELD("Date Locked",FALSE);
               UpdateAvgItems(4);
             END;

    CaptionML=[ENU=Accounting Period;
               FRA=P‚riode comptable];
    LookupPageID=Page100;
  }
  FIELDS
  {
    { 1   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                Name := FORMAT("Starting Date",0,Text000);
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              FRA=Date d‚but];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text10        ;CaptionML=[ENU=Name;
                                                              FRA=Nom] }
    { 3   ;   ;New Fiscal Year     ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Date Locked",FALSE);
                                                                IF NOT "New Fiscal Year" THEN BEGIN
                                                                  GLSetup.CALCFIELDS("Posting Allowed To");
                                                                  IF GLSetup."Posting Allowed To" <> 0D THEN
                                                                    OldPostingAllowedTo := CALCDATE('<-1D>',GLSetup."Posting Allowed To");
                                                                  MODIFY;
                                                                  GLSetup.CALCFIELDS("Posting Allowed To");
                                                                  AccountingPeriod2.SETRANGE("New Fiscal Year",TRUE);
                                                                  IF AccountingPeriod2.FIND('+') THEN BEGIN
                                                                    IF GLSetup."Posting Allowed To" <> 0D THEN
                                                                      IF CheckPostingRangeSetup(CALCDATE('<-1D>',GLSetup."Posting Allowed To")) THEN
                                                                        ERROR(
                                                                          Text10800,
                                                                          AccountingPeriod2."Starting Date",OldPostingAllowedTo,
                                                                          GLSetup.FIELDCAPTION("Allow Posting From"),GLSetup.FIELDCAPTION("Allow Posting To"),
                                                                          GLSetup.TABLECAPTION,UserSetup.TABLECAPTION);
                                                                  END;
                                                                END;
                                                                IF "New Fiscal Year" THEN BEGIN
                                                                  CheckOpenFiscalYears;
                                                                  IF NOT InvtSetup.GET THEN
                                                                    EXIT;
                                                                  "Average Cost Calc. Type" := InvtSetup."Average Cost Calc. Type";
                                                                  "Average Cost Period" := InvtSetup."Average Cost Period";
                                                                END ELSE BEGIN
                                                                  "Average Cost Calc. Type" := "Average Cost Calc. Type"::" ";
                                                                  "Average Cost Period" := "Average Cost Period"::" ";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=New Fiscal Year;
                                                              FRA=Nouvel exercice comptable] }
    { 4   ;   ;Closed              ;Boolean       ;CaptionML=[ENU=Closed;
                                                              FRA=Cl“tur‚];
                                                   Editable=No }
    { 5   ;   ;Date Locked         ;Boolean       ;CaptionML=[ENU=Date Locked;
                                                              FRA=Verrouillage date];
                                                   Editable=No }
    { 5804;   ;Average Cost Calc. Type;Option     ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[ENU=Average Cost Calc. Type;
                                                              FRA=Type calcul co–t moyen];
                                                   OptionCaptionML=[ENU=" ,Item,Item & Location & Variant";
                                                                    FRA=" ,Article,Article & Magasin & Variante"];
                                                   OptionString=[ ,Item,Item & Location & Variant];
                                                   Editable=No }
    { 5805;   ;Average Cost Period ;Option        ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[ENU=Average Cost Period;
                                                              FRA=P‚riode co–t moyen];
                                                   OptionCaptionML=[ENU=" ,Day,Week,Month,Quarter,Year,Accounting Period";
                                                                    FRA=" ,Jour,Semaine,Mois,Trimestre,Ann‚e,P‚riode comptable"];
                                                   OptionString=[ ,Day,Week,Month,Quarter,Year,Accounting Period];
                                                   Editable=No }
    { 10800;  ;Fiscally Closed     ;Boolean       ;CaptionML=[ENU=Fiscally Closed;
                                                              FRA=Cl“tur‚ fiscalement];
                                                   Editable=No }
    { 10801;  ;Fiscal Closing Date ;Date          ;CaptionML=[ENU=Fiscal Closing Date;
                                                              FRA=Date de cl“ture fiscale];
                                                   Editable=No }
    { 10802;  ;Period Reopened Date;Date          ;CaptionML=[ENU=Period Reopened Date;
                                                              FRA=Date r‚ouverture p‚riode];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Starting Date                           ;Clustered=Yes }
    {    ;New Fiscal Year,Date Locked              }
    {    ;Closed                                   }
    {    ;New Fiscal Year,Fiscally Closed          }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Starting Date,Name,New Fiscal Year,Closed }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=<Month Text>;FRA=<Month Text>';
      AccountingPeriod2@1001 : Record 50;
      InvtSetup@1002 : Record 313;
      Text10800@1120000 : TextConst 'ENU=To delete the fiscal year from %1 to %2, you must first modify the fields %3 and %4 in the %5 and %6 so that they are outside the fiscal year that is being deleted.;FRA=Pour supprimer l''exercice comptable du %1 au %2, vous devez d''abord modifier les champs %3 et %4 dans %5 et %6 de sorte … ce qu''ils se situent en dehors de l''exercice comptable en cours de suppression.';
      GLSetup@1120001 : Record 98;
      UserSetup@1120002 : Record 91;
      GLEntry@1120003 : Record 17;
      OldPostingAllowedTo@1120004 : Date;
      Text10801@1120005 : TextConst 'ENU=It is not allowed to have more than two open fiscal years. Please fiscally close the oldest open fiscal year first.;FRA=Vous ne pouvez pas avoir plus de deux exercices comptables ouverts. Veuillez d''abord cl“turer fiscalement l''exercice ouvert le plus ancien.';
      Text10802@1120006 : TextConst 'ENU=You will not be able to post transactions in a closed period. Are you sure you want to close the period with starting date %1?;FRA=Vous ne pourrez pas valider de transactions dans une p‚riode cl“tur‚e. Òtes-vous s–r de vouloir cl“turer la p‚riode ayant comme date de d‚but %1 ?';
      Text10803@1120007 : TextConst 'ENU=There are no open fiscal periods that can be closed.;FRA=Il n''y a pas de p‚riode fiscale ouverte … cl“turer.';
      Text10804@1120008 : TextConst 'ENU=You cannot close the last period of a fiscal year. In order to close the last period of a fiscal year, you must fiscally close the fiscal year.;FRA=Vous ne pouvez pas cl“turer la derniŠre p‚riode d''un exercice comptable. Pour cl“turer la derniŠre p‚riode d''un exercice comptable, vous devez cl“turer fiscalement ce dernier.';
      Text10805@1120009 : TextConst 'ENU=The period you are trying to reopen belongs to a fiscal year that has been fiscally closed.\Once a fiscal year is fiscally closed, you cannot reopen any of the periods in that fiscal year.;FRA=La p‚riode que vous tentez de rouvrir appartient … un exercice comptable qui a ‚t‚ cl“tur‚ fiscalement.\Lorsque vous avez cl“tur‚ fiscalement un exercice comptable, vous ne pouvez plus rouvrir ses p‚riodes.';
      Text10806@1120010 : TextConst 'ENU=A closed fiscal period should normally not be reopened. Are you sure you want to reopen the fiscal period with starting date %1?;FRA=Une p‚riode fiscale cl“tur‚e ne doit normalement plus ˆtre rouverte. Òtes-vous s–r de vouloir rouvrir la p‚riode fiscale ayant comme date de d‚but %1 ?';
      Text10807@1120011 : TextConst 'ENU=There are no closed fiscal periods that can be reopened.;FRA=Il n''y a pas de p‚riode fiscale cl“tur‚e … rouvrir.';
      Text10808@1120012 : TextConst 'ENU=To fiscally close the period from %1 to %2, you must first transfer or delete all existing simulation entries in this fiscal period.;FRA=Pour cl“turer fiscalement la p‚riode allant du %1 au %2, vous devez d''abord transf‚rer ou supprimer toutes les ‚critures de simulation existant dans cette p‚riode fiscale.';
      Text10809@1120013 : TextConst 'ENU=You must create a new fiscal year before you can close this fiscal period.;FRA=Vous devez cr‚er un exercice comptable avant de cl“turer cette p‚riode fiscale.';
      StartingDate@1120014 : Date;
      EndingDate@1120015 : Date;
      NoOfOpenFiscalYears@1120016 : Integer;

    PROCEDURE UpdateAvgItems@1(UpdateType@1005 : Option);
    VAR
      ChangeAvgCostSetting@1002 : Codeunit 5810;
    BEGIN
      ChangeAvgCostSetting.UpdateAvgCostFromAccPeriodChg(Rec,xRec,UpdateType);
    END;

    PROCEDURE GetFiscalYearEndDate@9(ReferenceDate@1000 : Date) : Date;
    VAR
      AccountingPeriod@1001 : Record 50;
    BEGIN
      WITH AccountingPeriod DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",0D,ReferenceDate);
        IF FINDLAST THEN
          SETRANGE("Starting Date");
        IF FIND('>') THEN
          EXIT("Starting Date" - 1);
      END;
    END;

    PROCEDURE GetFiscalYearStartDate@10(ReferenceDate@1000 : Date) : Date;
    VAR
      AccountingPeriod@1001 : Record 50;
    BEGIN
      WITH AccountingPeriod DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",0D,ReferenceDate);
        IF FINDLAST THEN
          EXIT("Starting Date")
      END;
    END;

    PROCEDURE CheckOpenFiscalYears@1120000();
    BEGIN
      AccountingPeriod2.RESET;
      AccountingPeriod2.SETRANGE("New Fiscal Year",TRUE);
      AccountingPeriod2.SETRANGE("Fiscally Closed",FALSE);
      NoOfOpenFiscalYears := AccountingPeriod2.COUNT;
      IF AccountingPeriod2.FINDFIRST THEN;

      // check last period of previous fiscal year
      AccountingPeriod2.SETRANGE("New Fiscal Year");
      AccountingPeriod2.SETRANGE("Fiscally Closed");
      IF AccountingPeriod2.FIND('<') THEN
        IF NOT AccountingPeriod2."Fiscally Closed" THEN
          NoOfOpenFiscalYears := NoOfOpenFiscalYears + 1;
      IF NoOfOpenFiscalYears > 2 THEN
        ERROR(Text10801);
    END;

    PROCEDURE CloseFiscalPeriod@1120001();
    BEGIN
      AccountingPeriod2.RESET;
      AccountingPeriod2.SETRANGE("Fiscally Closed",FALSE);
      IF AccountingPeriod2.FINDFIRST THEN BEGIN
        StartingDate := AccountingPeriod2."Starting Date";
        IF NOT AccountingPeriod2.FIND('>') THEN
          ERROR(Text10809);
        // check last period in fiscal year
        IF AccountingPeriod2."New Fiscal Year" THEN
          ERROR(Text10804);
        EndingDate := CALCDATE('<-1D>',AccountingPeriod2."Starting Date");
        AccountingPeriod2.FIND('<');
        CheckSimulationEntries(StartingDate,EndingDate);
        IF CONFIRM(Text10802,TRUE,AccountingPeriod2."Starting Date") THEN BEGIN
          AccountingPeriod2."Fiscally Closed" := TRUE;
          AccountingPeriod2."Fiscal Closing Date" := TODAY;
          AccountingPeriod2.MODIFY;
          // update allowed posting range
          UpdateGLSetup(EndingDate);
          UpdateUserSetup(EndingDate);
        END;
      END ELSE
        MESSAGE(Text10803);
    END;

    PROCEDURE ReopenFiscalPeriod@1120002();
    VAR
      AccountingPeriod3@1120000 : Record 50;
    BEGIN
      AccountingPeriod2.RESET;
      AccountingPeriod2.SETRANGE("Fiscally Closed",FALSE);
      IF AccountingPeriod2.FINDFIRST THEN
        IF AccountingPeriod2."New Fiscal Year" THEN
          ERROR(Text10805);
      AccountingPeriod2.SETRANGE("Fiscally Closed",TRUE);
      IF AccountingPeriod2.FINDLAST THEN BEGIN
        IF NOT CONFIRM(Text10806,FALSE,AccountingPeriod2."Starting Date") THEN
          EXIT;
        AccountingPeriod2."Fiscally Closed" := FALSE;
        AccountingPeriod2."Period Reopened Date" := TODAY;
        AccountingPeriod2.MODIFY;
      END ELSE
        MESSAGE(Text10807);
    END;

    PROCEDURE UpdateGLSetup@1120003(PeriodEndDate@1120000 : Date);
    BEGIN
      WITH GLSetup DO BEGIN
        GET;
        CALCFIELDS("Posting Allowed From");
        IF "Allow Posting From" <= PeriodEndDate THEN BEGIN
          "Allow Posting From" := "Posting Allowed From";
          MODIFY;
        END;
        IF ("Allow Posting To" <= PeriodEndDate) AND ("Allow Posting To" <> 0D) THEN BEGIN
          "Allow Posting To" := CALCDATE('<+1M-1D>',"Posting Allowed From");
          MODIFY;
        END;
      END;
    END;

    PROCEDURE UpdateUserSetup@1120004(PeriodEndDate@1120000 : Date);
    BEGIN
      WITH UserSetup DO BEGIN
        IF FINDFIRST THEN
          REPEAT
            IF "Allow Posting From" <= PeriodEndDate THEN BEGIN
              "Allow Posting From" := GLSetup."Posting Allowed From";
              MODIFY;
            END;
            IF ("Allow Posting To" <= PeriodEndDate) AND ("Allow Posting To" <> 0D) THEN BEGIN
              "Allow Posting To" := CALCDATE('<+1M-1D>',GLSetup."Posting Allowed From");
              MODIFY;
            END;
          UNTIL NEXT = 0;
      END
    END;

    PROCEDURE CheckSimulationEntries@1120005(PeriodStartDate@1120000 : Date;PeriodEndDate@1120001 : Date);
    BEGIN
      WITH GLEntry DO BEGIN
        SETFILTER("Posting Date",'%1..%2',PeriodStartDate,PeriodEndDate);
        SETFILTER("Entry No.",'<%1',0);
        IF FIND('-') THEN
          ERROR(
            Text10808,
            PeriodStartDate,PeriodEndDate,
            TABLECAPTION,FIELDCAPTION("Entry No."),"Entry No.");
      END;
    END;

    PROCEDURE CheckPostingRangeSetup@1120006(FYEndDate@1120000 : Date) : Boolean;
    BEGIN
      WITH GLSetup DO BEGIN
        GET;
        IF ("Allow Posting From" > FYEndDate) OR ("Allow Posting To" > FYEndDate) THEN
          EXIT(TRUE);
      END;

      WITH UserSetup DO
        IF FINDFIRST THEN
          REPEAT
            IF ("Allow Posting From" > FYEndDate) OR ("Allow Posting To" > FYEndDate) THEN
              EXIT(TRUE);
          UNTIL NEXT = 0;

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

