OBJECT Page 9087 Sales Line FactBox
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Line Details;
               FRA=D‚tails ligne vente];
    SourceTable=Table37;
    PageType=CardPart;
    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Reserved Quantity");
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 8   ;1   ;Field     ;
                Name=ItemNo;
                Lookup=No;
                CaptionML=[ENU=Item No.;
                           FRA=Nø article];
                SourceExpr=ShowNo;
                OnDrillDown=BEGIN
                              SalesInfoPaneMgt.LookupItem(Rec);
                            END;
                             }

    { 13  ;1   ;Field     ;
                Name=Required Quantity;
                CaptionML=[ENU=Required Quantity;
                           FRA=Quantit‚ requise];
                DecimalPlaces=0:5;
                SourceExpr="Outstanding Quantity" - "Reserved Quantity" }

    { 12  ;1   ;Group     ;
                Name=Availability;
                CaptionML=[ENU=Availability;
                           FRA=Disponibilit‚];
                GroupType=Group }

    { 10  ;2   ;Field     ;
                Name=Shipment Date;
                CaptionML=[ENU=Shipment Date;
                           FRA=Date d'exp‚dition];
                SourceExpr=SalesInfoPaneMgt.CalcAvailabilityDate(Rec) }

    { 3   ;2   ;Field     ;
                Name=Item Availability;
                DrillDown=Yes;
                CaptionML=[ENU=Item Availability;
                           FRA=Disponibilit‚ article];
                DecimalPlaces=2:0;
                SourceExpr=SalesInfoPaneMgt.CalcAvailability(Rec);
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent);
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1   ;2   ;Field     ;
                Name=Available Inventory;
                CaptionML=[ENU=Available Inventory;
                           FRA=Stock disponible];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcAvailableInventory(Rec) }

    { 2   ;2   ;Field     ;
                Name=Scheduled Receipt;
                CaptionML=[ENU=Scheduled Receipt;
                           FRA=R‚ception planifi‚e];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcScheduledReceipt(Rec) }

    { 4   ;2   ;Field     ;
                Name=Reserved Receipt;
                CaptionML=[ENU=Reserved Receipt;
                           FRA=R‚ception r‚serv‚e];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcReservedRequirements(Rec) }

    { 6   ;2   ;Field     ;
                Name=Gross Requirements;
                CaptionML=[ENU=Gross Requirements;
                           FRA=Besoins bruts];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcGrossRequirements(Rec) }

    { 9   ;2   ;Field     ;
                Name=Reserved Requirements;
                CaptionML=[ENU=Reserved Requirements;
                           FRA=Besoins r‚serv‚s];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcReservedDemand(Rec) }

    { 16  ;1   ;Group     ;
                Name=Item;
                CaptionML=[ENU=Item;
                           FRA=Article];
                GroupType=Group }

    { 15  ;2   ;Field     ;
                Name=UnitofMeasureCode;
                CaptionML=[ENU=Unit of Measure Code;
                           FRA=Code unit‚];
                SourceExpr="Unit of Measure Code" }

    { 14  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                CaptionML=[ENU=Qty. per Unit of Measure;
                           FRA=Quantit‚ par unit‚];
                SourceExpr="Qty. per Unit of Measure" }

    { 5   ;2   ;Field     ;
                Name=Substitutions;
                DrillDown=Yes;
                CaptionML=[ENU=Substitutions;
                           FRA=Articles de substitution];
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSubstitutions(Rec);
                OnDrillDown=BEGIN
                              ShowItemSub;
                              CurrPage.UPDATE;
                            END;
                             }

    { 7   ;2   ;Field     ;
                Name=SalesPrices;
                DrillDown=Yes;
                CaptionML=[ENU=Sales Prices;
                           FRA=Prix vente];
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSalesPrices(Rec);
                OnDrillDown=BEGIN
                              ShowPrices;
                              CurrPage.UPDATE;
                            END;
                             }

    { 11  ;2   ;Field     ;
                Name=SalesLineDiscounts;
                DrillDown=Yes;
                CaptionML=[ENU=Sales Line Discounts;
                           FRA=Remises ligne vente];
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSalesLineDisc(Rec);
                OnDrillDown=BEGIN
                              ShowLineDisc;
                              CurrPage.UPDATE;
                            END;
                             }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record 36;
      SalesPriceCalcMgt@1002 : Codeunit 7000;
      SalesInfoPaneMgt@1001 : Codeunit 7171;
      ItemAvailFormsMgt@1003 : Codeunit 353;

    LOCAL PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowNo@29() : Code[20];
    BEGIN
      IF Type <> Type::Item THEN
        EXIT('');
      EXIT("No.");
    END;

    BEGIN
    END.
  }
}

