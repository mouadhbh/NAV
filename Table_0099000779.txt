OBJECT Table 99000779 Production BOM Version
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Production BOM No.,Version Code,Description;
    OnInsert=BEGIN
               ProdBOMHeader.GET("Production BOM No.");
               IF "Version Code" = '' THEN BEGIN
                 ProdBOMHeader.TESTFIELD("Version Nos.");
                 NoSeriesMgt.InitSeries(ProdBOMHeader."Version Nos.",xRec."No. Series",0D,"Version Code","No. Series");
               END;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=VAR
               ProdBOMLine@1000 : Record 99000772;
             BEGIN
               ProdBOMLine.SETRANGE("Production BOM No.","Production BOM No.");
               ProdBOMLine.SETRANGE("Version Code","Version Code");
               ProdBOMLine.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               IF Status = Status::Certified THEN
                 ERROR(Text001,TABLECAPTION,FIELDCAPTION(Status),FORMAT(Status));
             END;

    CaptionML=[ENU=Production BOM Version;
               FRA=Version nomenclature];
    LookupPageID=Page99000800;
    DrillDownPageID=Page99000800;
  }
  FIELDS
  {
    { 1   ;   ;Production BOM No.  ;Code20        ;TableRelation="Production BOM Header";
                                                   CaptionML=[ENU=Production BOM No.;
                                                              FRA=Nø nomenclature production];
                                                   NotBlank=Yes }
    { 2   ;   ;Version Code        ;Code10        ;CaptionML=[ENU=Version Code;
                                                              FRA=Code version] }
    { 3   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 10  ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              FRA=Date d‚but] }
    { 21  ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                Item@1000 : Record 27;
                                                                ItemUnitOfMeasure@1001 : Record 5404;
                                                              BEGIN
                                                                IF (Status = Status::Certified) AND ("Unit of Measure Code" <> xRec."Unit of Measure Code") THEN
                                                                  FIELDERROR(Status);
                                                                Item.SETRANGE("Production BOM No.","Production BOM No.");
                                                                IF Item.FINDSET THEN
                                                                  REPEAT
                                                                    ItemUnitOfMeasure.GET(Item."No.","Unit of Measure Code");
                                                                  UNTIL Item.NEXT = 0;
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              FRA=Code unit‚] }
    { 22  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              FRA=Date dern. modification];
                                                   Editable=No }
    { 45  ;   ;Status              ;Option        ;OnValidate=VAR
                                                                ProdBOMHeader@1000 : Record 99000771;
                                                                PlanningAssignment@1001 : Record 99000850;
                                                                ProdBOMCheck@1002 : Codeunit 99000769;
                                                              BEGIN
                                                                IF (Status <> xRec.Status) AND (Status = Status::Certified) THEN BEGIN
                                                                  ProdBOMCheck.ProdBOMLineCheck("Production BOM No.","Version Code");
                                                                  TESTFIELD("Unit of Measure Code");
                                                                  ProdBOMHeader.GET("Production BOM No.");
                                                                  ProdBOMHeader."Low-Level Code" := 0;
                                                                  ProdBOMCheck.Code(ProdBOMHeader,"Version Code");
                                                                  PlanningAssignment.NewBOM("Production BOM No.");
                                                                END;
                                                                MODIFY(TRUE);
                                                                COMMIT;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              FRA=Statut];
                                                   OptionCaptionML=[ENU=New,Certified,Under Development,Closed;
                                                                    FRA=Cr‚ation en cours,Valid‚e,Modification en cours,Cl“tur‚e];
                                                   OptionString=New,Certified,Under Development,Closed }
    { 50  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              FRA=Souches de nø];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Production BOM No.,Version Code         ;Clustered=Yes }
    {    ;Production BOM No.,Starting Date         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProdBOMHeader@1000 : Record 99000771;
      ProdBOMVersion@1001 : Record 99000779;
      NoSeriesMgt@1002 : Codeunit 396;
      Text001@1003 : TextConst 'ENU=You cannot rename the %1 when %2 is %3.;FRA=Vous ne pouvez pas renommer l''enregistrement %1 lorsque la valeur %2 est %3.';

    PROCEDURE AssistEdit@2(OldProdBOMVersion@1000 : Record 99000779) : Boolean;
    BEGIN
      WITH ProdBOMVersion DO BEGIN
        ProdBOMVersion := Rec;
        ProdBOMHeader.GET("Production BOM No.");
        ProdBOMHeader.TESTFIELD("Version Nos.");
        IF NoSeriesMgt.SelectSeries(ProdBOMHeader."Version Nos.",OldProdBOMVersion."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("Version Code");
          Rec := ProdBOMVersion;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE Caption@1() : Text[100];
    VAR
      ProdBOMHeader@1000 : Record 99000771;
    BEGIN
      IF GETFILTERS = '' THEN
        EXIT('');

      IF NOT ProdBOMHeader.GET("Production BOM No.") THEN
        EXIT('');

      EXIT(
        STRSUBSTNO('%1 %2 %3',
          "Production BOM No.",ProdBOMHeader.Description,"Version Code"));
    END;

    BEGIN
    END.
  }
}

