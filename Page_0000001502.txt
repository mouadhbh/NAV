OBJECT Page 1502 Workflow Subpage
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Workflow Subpage;
               FRA=Sous-page flux de travail];
    SourceTable=Table1507;
    DelayedInsert=Yes;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    AutoSplitKey=Yes;
    ShowFilter=No;
    OnFindRecord=BEGIN
                   FILTERGROUP(4);
                   IF WorkflowCode <> GETRANGEMAX("Workflow Code") THEN BEGIN
                     WorkflowCode := GETRANGEMAX("Workflow Code");
                     ClearBuffer;
                   END;

                   IF ISEMPTY THEN
                     PopulateTable(WorkflowCode);

                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=VAR
                       Workflow@1000 : Record 1501;
                     BEGIN
                       Workflow.GET(WorkflowCode);
                       SetActionVisibility;
                     END;

    OnNewRecord=BEGIN
                  CreateNewWhenThenLine(WorkflowCode,BelowxRec);
                END;

    OnAfterGetCurrRecord=VAR
                           Workflow@1000 : Record 1501;
                         BEGIN
                           IF Workflow.GET(WorkflowCode) THEN ;
                           SetActionVisibility;
                           UpdateResponseDescriptionStyle;
                           IsNotTemplate := NOT Workflow.Template;
                         END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;Action    ;
                      Name=DecreaseIndent;
                      CaptionML=[ENU=Decrease Indent;
                                 FRA=R‚duire le retrait];
                      Visible=IsNotTemplate;
                      Image=PreviousRecord;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 MoveLeft;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=IncreaseIndent;
                      CaptionML=[ENU=Increase Indent;
                                 FRA=Augmenter le retrait];
                      Visible=IsNotTemplate;
                      Image=NextRecord;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 MoveRight;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=DeleteEventConditions;
                      CaptionML=[ENU=Delete Event Conditions;
                                 FRA=Supprimer conditions d'‚v‚nement];
                      Visible=IsNotTemplate;
                      Enabled=EnableEditActions;
                      Image=Delete;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 DeleteEventConditions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                IndentationColumnName=Indent;
                IndentationControls=Event Description;
                GroupType=Repeater;
                FreezeColumnID=Condition }

    { 11  ;2   ;Field     ;
                Width=1;
                SourceExpr=Indent;
                Visible=FALSE;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                Width=45;
                CaptionML=[ENU=When Event;
                           FRA=En cas d'‚v‚nement];
                SourceExpr="Event Description";
                Editable=IsNotTemplate;
                OnValidate=BEGIN
                             CurrPage.UPDATE(FALSE);
                           END;

                ShowMandatory=TRUE }

    { 4   ;2   ;Field     ;
                Width=30;
                CaptionML=[ENU=On Condition;
                           FRA=Condition];
                SourceExpr=Condition;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               OpenEventConditions;
                               CurrPage.UPDATE(TRUE);
                             END;
                              }

    { 6   ;2   ;Field     ;
                SourceExpr="Entry Point";
                Visible=FALSE;
                Editable=IsNotTemplate }

    { 5   ;2   ;Field     ;
                Width=100;
                Lookup=No;
                CaptionML=[ENU=Then Response;
                           FRA=Alors, r‚ponse];
                SourceExpr="Response Description";
                Editable=FALSE;
                StyleExpr="Response Description Style";
                OnAssistEdit=BEGIN
                               OpenEventResponses;
                               CurrPage.UPDATE(FALSE);
                             END;
                              }

  }
  CODE
  {
    VAR
      WorkflowCode@1000 : Code[20];
      EnableEditActions@1001 : Boolean;
      IsNotTemplate@1003 : Boolean;

    LOCAL PROCEDURE SetActionVisibility@1();
    VAR
      Workflow@1001 : Record 1501;
      WorkflowStep@1000 : Record 1502;
      WorkflowRule@1002 : Record 1524;
    BEGIN
      IF NOT WorkflowStep.GET("Workflow Code","Event Step ID") THEN BEGIN
        EnableEditActions := FALSE;
        EXIT;
      END;

      Workflow.GET("Workflow Code");

      EnableEditActions := (NOT Workflow.Enabled) AND (WorkflowStep.Type = WorkflowStep.Type::"Event") AND
        ((NOT ISNULLGUID(WorkflowStep.Argument)) OR WorkflowStep.FindWorkflowRules(WorkflowRule));
    END;

    PROCEDURE RefreshBuffer@2();
    BEGIN
      ClearBuffer;
      PopulateTable(WorkflowCode);
    END;

    BEGIN
    END.
  }
}

