OBJECT Table 7113 Analysis Type
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Name;
    CaptionML=[ENU=Analysis Type;
               FRA=Type d'analyse];
    LookupPageID=Page7111;
    DrillDownPageID=Page7111;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              FRA=Nom] }
    { 3   ;   ;Value Type          ;Option        ;OnValidate=BEGIN
                                                                IF xRec."Value Type" <> "Value Type" THEN BEGIN
                                                                  "Item Ledger Entry Type Filter" := '';
                                                                  "Value Entry Type Filter" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Value Type;
                                                              FRA=Type de valeur];
                                                   OptionCaptionML=[ENU=" ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost";
                                                                    FRA=" ,QuantitÇ,Montant vente,Coñt total,Montant non incorporable,Prix unitaire,Coñt standard,Coñt indirect,Coñt unitaire"];
                                                   OptionString=[ ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost] }
    { 4   ;   ;Item Ledger Entry Type Filter;Text250;
                                                   OnValidate=BEGIN
                                                                IF "Item Ledger Entry Type Filter" <> '' THEN
                                                                  IF NOT ("Value Type" IN
                                                                          ["Value Type"::Quantity,
                                                                           "Value Type"::"Cost Amount",
                                                                           "Value Type"::"Non-Invntble Amount",
                                                                           "Value Type"::"Sales Amount"])
                                                                  THEN
                                                                    ERROR(Text000,FIELDCAPTION("Item Ledger Entry Type Filter"),"Value Type");
                                                                AnalysisRepMgmt.ValidateFilter(
                                                                  "Item Ledger Entry Type Filter",DATABASE::"Analysis Type",
                                                                  FIELDNO("Item Ledger Entry Type Filter"),CurrFieldNo <> FIELDNO("Item Ledger Entry Type Filter"));
                                                              END;

                                                   CaptionML=[ENU=Item Ledger Entry Type Filter;
                                                              FRA=Filtre type Çcr. comptable article] }
    { 5   ;   ;Value Entry Type Filter;Text250    ;OnValidate=BEGIN
                                                                IF "Value Entry Type Filter" <> '' THEN
                                                                  IF NOT ("Value Type" IN
                                                                          ["Value Type"::"Cost Amount",
                                                                           "Value Type"::"Non-Invntble Amount",
                                                                           "Value Type"::"Sales Amount"])
                                                                  THEN
                                                                    ERROR(Text000,FIELDCAPTION("Value Entry Type Filter"),"Value Type");
                                                                AnalysisRepMgmt.ValidateFilter(
                                                                  "Value Entry Type Filter",DATABASE::"Analysis Type",
                                                                  FIELDNO("Value Entry Type Filter"),CurrFieldNo <> FIELDNO("Value Entry Type Filter"));
                                                              END;

                                                   CaptionML=[ENU=Value Entry Type Filter;
                                                              FRA=Filtre type Çcriture valeur] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot specify a %1 for %2.;FRA=Vous ne pouvez pas spÇcifier d''/de %1 pour %2.';
      Text001@1001 : TextConst 'ENU=COGS;FRA=Val s stk';
      Text002@1002 : TextConst 'ENU=Non-Inventoriable Cost;FRA=Coñt non incorp.';
      Text003@1003 : TextConst 'ENU=Sales Amount;FRA=Montant vente';
      Text004@1004 : TextConst 'ENU=Sales Quantity;FRA=QuantitÇ vente';
      Text005@1005 : TextConst 'ENU=Unit Price;FRA=Prix unitaire';
      Text006@1006 : TextConst 'ENU=COGS;FRA=Val. sortie stock';
      Text007@1007 : TextConst 'ENU=NON-INVTBL;FRA=NON-INVTBL';
      Text008@1008 : TextConst 'ENU=SALES-AMT;FRA=MNT VENTES';
      Text009@1009 : TextConst 'ENU=SALES-QTY;FRA=QTE VENTES';
      Text010@1010 : TextConst 'ENU=UNIT-PRICE;FRA=PRIX UNIT';
      Text011@1011 : TextConst 'ENU=Direct Cost;FRA=Coñt direct';
      Text012@1012 : TextConst 'ENU=DIRCOST;FRA=DIRCOST';
      Text013@1013 : TextConst 'ENU=Purchases;FRA=Achats';
      Text014@1014 : TextConst 'ENU=PURCHASES;FRA=ACHATS';
      Text015@1015 : TextConst 'ENU=Purchases Quantity;FRA=QuantitÇ achats';
      Text016@1016 : TextConst 'ENU=PURCH-QTY;FRA=PURCH-QTY';
      Text017@1017 : TextConst 'ENU=Direct Cost - Capacity;FRA=Coñt direct - CapacitÇ';
      Text018@1018 : TextConst 'ENU=DIRCOSTCAP;FRA=CAPCOUTDIR';
      Text019@1019 : TextConst 'ENU=Indirect Cost;FRA=Coñt indirect';
      Text020@1020 : TextConst 'ENU=INDIRCOST;FRA=INDIRCOST';
      Text021@1021 : TextConst 'ENU=Revaluation;FRA=RÇÇvaluation';
      Text022@1022 : TextConst 'ENU=REVAL;FRA=REVAL';
      Text023@1023 : TextConst 'ENU=Rounding;FRA=Arrondi';
      Text024@1024 : TextConst 'ENU=ROUNDING;FRA=ROUNDING';
      Text025@1025 : TextConst 'ENU=Variance;FRA=êcart';
      Text026@1026 : TextConst 'ENU=VARIANCE;FRA=êCART';
      Text027@1027 : TextConst 'ENU=Inventory;FRA=Stocks';
      Text028@1028 : TextConst 'ENU=INVENTORY;FRA=STOCKS';
      Text029@1029 : TextConst 'ENU=Consumption;FRA=Consommation';
      Text030@1030 : TextConst 'ENU=CONSUMP;FRA=CONSO';
      Text031@1031 : TextConst 'ENU=Negative Adjustment;FRA=Ajustement nÇgatif';
      Text032@1032 : TextConst 'ENU=N-ADJTM;FRA=N-ADJTM';
      Text033@1033 : TextConst 'ENU=Output;FRA=Production';
      Text034@1034 : TextConst 'ENU=OUTPUT;FRA=PRODUCTION';
      Text035@1035 : TextConst 'ENU=Postive Adjustment;FRA=Ajustement positif';
      Text036@1036 : TextConst 'ENU=P-ADJTM;FRA=P-ADJTM';
      Text037@1037 : TextConst 'ENU=Transfer;FRA=Transfert';
      Text038@1038 : TextConst 'ENU=TRANSFER;FRA=TRANSFERT';
      Text039@1039 : TextConst 'ENU=Consumption Quantity;FRA=QuantitÇ consommÇe';
      Text040@1040 : TextConst 'ENU=CONSUMPQTY;FRA=CONSUMPQTY';
      Text041@1041 : TextConst 'ENU=Inventory Quantity;FRA=QuantitÇ en stock';
      Text042@1042 : TextConst 'ENU=INVT-QTY;FRA=INVT-QTY';
      Text043@1043 : TextConst 'ENU=Neg. Adjmt. Quantity;FRA=QuantitÇ ajust. nÇg.';
      Text044@1044 : TextConst 'ENU=N-ADJTMQTY;FRA=N-ADJTMQTY';
      Text045@1045 : TextConst 'ENU=Output Quantity;FRA=QuantitÇ produite';
      Text046@1046 : TextConst 'ENU=OUTPUT-QTY;FRA=OUTPUT-QTY';
      Text047@1047 : TextConst 'ENU=Pos. Adjmt. Quantity;FRA=QuantitÇ ajust. pos.';
      Text048@1048 : TextConst 'ENU=P-ADJTMQTY;FRA=P-ADJTMQTY';
      Text049@1049 : TextConst 'ENU=Transfer Quantity;FRA=QuantitÇ transfert';
      Text050@1050 : TextConst 'ENU=TRANS-QTY;FRA=TRANS-QTY';
      Text051@1051 : TextConst 'ENU=Standard Cost;FRA=Coñt standard';
      Text052@1052 : TextConst 'ENU=STDCOST;FRA=STDCOST';
      Text053@1053 : TextConst 'ENU=Indirect Cost %;FRA=% coñt indirect';
      Text054@1054 : TextConst 'ENU=INDCOSTPCT;FRA=INDCOSTPCT';
      Text055@1055 : TextConst 'ENU=The default Analysis Types have been recreated.;FRA=Les types d''analyse par dÇfaut ont ÇtÇ recrÇÇs.';
      AnalysisRepMgmt@1056 : Codeunit 7110;

    PROCEDURE ResetDefaultAnalysisTypes@1(ShowMessage@1000 : Boolean);
    VAR
      ItemStatBuf@1001 : Record 5821;
    BEGIN
      InsertItemAnalysisType(
        Text001,
        Text006,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text007,
        Text002,
        '<>'' ''',
        '',
        "Value Type"::"Non-Invntble Amount");
      InsertItemAnalysisType(
        Text008,
        Text003,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation)),
        "Value Type"::"Sales Amount");
      InsertItemAnalysisType(
        Text009,
        Text004,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text010,
        Text005,
        '',
        '',
        "Value Type"::"Unit Price");
      InsertItemAnalysisType(
        Text012,
        Text011,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::"Direct Cost")),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text014,
        Text013,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase)),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text016,
        Text015,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text018,
        Text017,
        ''' ''',
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::"Direct Cost")),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text020,
        Text019,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::"Indirect Cost")),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text022,
        Text021,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text024,
        Text023,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Rounding)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text026,
        Text025,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Variance)),
        "Value Type"::"Cost Amount");

      InsertItemAnalysisType(
        Text028,
        Text027,
        '<>'' ''',
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text030,
        Text029,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption)),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text032,
        Text031,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Negative Adjmt.")),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text034,
        Text033,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Variance)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text036,
        Text035,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Positive Adjmt.")),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text038,
        Text037,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Transfer)),
        '',
        "Value Type"::"Cost Amount");

      InsertItemAnalysisType(
        Text040,
        Text039,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text042,
        Text041,
        '<>'' ''',
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text044,
        Text043,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Negative Adjmt.")),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text046,
        Text045,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text048,
        Text047,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Positive Adjmt.")),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text050,
        Text049,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Transfer)),
        '',
        "Value Type"::Quantity);

      InsertItemAnalysisType(
        Text052,
        Text051,
        '',
        '',
        "Value Type"::"Standard Cost");
      InsertItemAnalysisType(
        Text054,
        Text053,
        '',
        '',
        "Value Type"::"Indirect Cost");

      IF ShowMessage THEN
        MESSAGE(Text055);
    END;

    LOCAL PROCEDURE InsertItemAnalysisType@2(Code2@1006 : Code[10];Name2@1000 : Text[30];ItemLedgEntryTypeFilter@1001 : Text[250];ValueEntryTypeFilter@1002 : Text[250];ValueType@1003 : ' ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost');
    VAR
      AnalysisType@1004 : Record 7113;
    BEGIN
      WITH AnalysisType DO BEGIN
        INIT;
        Code := Code2;
        Name := Name2;
        VALIDATE("Value Type",ValueType);
        VALIDATE("Item Ledger Entry Type Filter",ItemLedgEntryTypeFilter);
        VALIDATE("Value Entry Type Filter",ValueEntryTypeFilter);
        IF NOT INSERT(TRUE) THEN
          MODIFY(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

