OBJECT Table 7023 Sales Price Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Sales Type" = "Sales Type"::"All Customers" THEN
                 "Sales Code" := ''
               ELSE
                 TESTFIELD("Sales Code");
               TESTFIELD("Item No.");
             END;

    OnRename=BEGIN
               IF "Sales Type" <> "Sales Type"::"All Customers" THEN
                 TESTFIELD("Sales Code");
               TESTFIELD("Item No.");
             END;

    CaptionML=[ENU=Sales Price Worksheet;
               FRA=Feuille prix vente];
  }
  FIELDS
  {
    { 1   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF "Item No." <> xRec."Item No." THEN BEGIN
                                                                  "Unit of Measure Code" := '';
                                                                  "Variant Code" := '';
                                                                END;

                                                                IF "Sales Type" = "Sales Type"::"Customer Price Group" THEN
                                                                  IF CustPriceGr.GET("Sales Code") AND
                                                                     (CustPriceGr."Allow Invoice Disc." <> "Allow Invoice Disc.")
                                                                  THEN
                                                                    IF Item.GET("Item No.") THEN
                                                                      "Allow Invoice Disc." := Item."Allow Invoice Disc.";

                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              FRA=Nø article];
                                                   NotBlank=Yes }
    { 2   ;   ;Sales Code          ;Code20        ;TableRelation=IF (Sales Type=CONST(Customer Price Group)) "Customer Price Group"
                                                                 ELSE IF (Sales Type=CONST(Customer)) Customer
                                                                 ELSE IF (Sales Type=CONST(Campaign)) Campaign;
                                                   OnValidate=BEGIN
                                                                IF ("Sales Code" <> '') AND ("Sales Type" = "Sales Type"::"All Customers") THEN
                                                                  ERROR(Text001,FIELDCAPTION("Sales Code"));

                                                                SetSalesDescription;
                                                                CalcCurrentPrice(PriceAlreadyExists);

                                                                IF ("Sales Code" = '') AND ("Sales Type" <> "Sales Type"::"All Customers") THEN
                                                                  EXIT;

                                                                IF NOT PriceAlreadyExists AND ("Sales Code" <> '') THEN
                                                                  CASE "Sales Type" OF
                                                                    "Sales Type"::"Customer Price Group":
                                                                      BEGIN
                                                                        CustPriceGr.GET("Sales Code");
                                                                        "Price Includes VAT" := CustPriceGr."Price Includes VAT";
                                                                        "VAT Bus. Posting Gr. (Price)" := CustPriceGr."VAT Bus. Posting Gr. (Price)";
                                                                        "Allow Line Disc." := CustPriceGr."Allow Line Disc.";
                                                                        "Allow Invoice Disc." := CustPriceGr."Allow Invoice Disc.";
                                                                      END;
                                                                    "Sales Type"::Customer:
                                                                      BEGIN
                                                                        Cust.GET("Sales Code");
                                                                        "Currency Code" := Cust."Currency Code";
                                                                        "Price Includes VAT" := Cust."Prices Including VAT";
                                                                        "Allow Line Disc." := Cust."Allow Line Disc.";
                                                                      END;
                                                                    "Sales Type"::Campaign:
                                                                      BEGIN
                                                                        Campaign.GET("Sales Code");
                                                                        "Starting Date" := Campaign."Starting Date";
                                                                        "Ending Date" := Campaign."Ending Date";
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Sales Code;
                                                              FRA=Code vente] }
    { 3   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              FRA=Code devise] }
    { 4   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" <> 0D) THEN
                                                                  ERROR(Text000,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"));

                                                                IF CurrFieldNo <> 0 THEN
                                                                  IF "Sales Type" = "Sales Type"::Campaign THEN
                                                                    ERROR(Text002,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"),FIELDCAPTION("Sales Type"),"Sales Type");

                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              FRA=Date d‚but] }
    { 5   ;   ;Current Unit Price  ;Decimal       ;CaptionML=[ENU=Current Unit Price;
                                                              FRA=Prix unitaire actuel];
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 6   ;   ;New Unit Price      ;Decimal       ;CaptionML=[ENU=New Unit Price;
                                                              FRA=Nouveau prix unitaire];
                                                   MinValue=0;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 7   ;   ;Price Includes VAT  ;Boolean       ;CaptionML=[ENU=Price Includes VAT;
                                                              FRA=Prix TTC] }
    { 10  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              FRA=Remise facture autoris‚e] }
    { 11  ;   ;VAT Bus. Posting Gr. (Price);Code10;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Gr. (Price);
                                                              FRA=Gpe compta. march‚ TVA (prix)] }
    { 13  ;   ;Sales Type          ;Option        ;OnValidate=BEGIN
                                                                IF "Sales Type" <> xRec."Sales Type" THEN
                                                                  VALIDATE("Sales Code",'');
                                                              END;

                                                   CaptionML=[ENU=Sales Type;
                                                              FRA=Type vente];
                                                   OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,Campaign;
                                                                    FRA=Client,Groupe tarifs client,Tous les clients,Campagne];
                                                   OptionString=Customer,Customer Price Group,All Customers,Campaign }
    { 14  ;   ;Minimum Quantity    ;Decimal       ;OnValidate=BEGIN
                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=[ENU=Minimum Quantity;
                                                              FRA=Quantit‚ minimum];
                                                   MinValue=0 }
    { 15  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Starting Date");

                                                                IF CurrFieldNo <> 0 THEN
                                                                  IF "Sales Type" = "Sales Type"::Campaign THEN
                                                                    ERROR(Text002,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"),FIELDCAPTION("Sales Type"),"Sales Type");
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              FRA=Date fin] }
    { 20  ;   ;Item Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Description;
                                                              FRA=D‚signation article] }
    { 21  ;   ;Sales Description   ;Text50        ;CaptionML=[ENU=Sales Description;
                                                              FRA=Description ventes] }
    { 5400;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              FRA=Code unit‚] }
    { 5700;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              FRA=Code variante] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              FRA=Autoriser remise ligne] }
  }
  KEYS
  {
    {    ;Starting Date,Ending Date,Sales Type,Sales Code,Currency Code,Item No.,Variant Code,Unit of Measure Code,Minimum Quantity;
                                                   Clustered=Yes }
    {    ;Item No.,Variant Code,Unit of Measure Code,Minimum Quantity,Starting Date,Ending Date,Sales Type,Sales Code,Currency Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CustPriceGr@1000 : Record 6;
      Text000@1001 : TextConst 'ENU=%1 cannot be after %2;FRA=%1 ne peut pas ˆtre post‚rieur(e) … %2';
      Cust@1002 : Record 18;
      Text001@1003 : TextConst 'ENU=%1 must be blank.;FRA=%1 doit ˆtre blanc.';
      Campaign@1006 : Record 5071;
      Item@1005 : Record 27;
      PriceAlreadyExists@1004 : Boolean;
      Text002@1007 : TextConst 'ENU="%1 and %2 can only be altered from the Campaign Card when %3 = %4.";FRA="Les champs %1 et %2 peuvent uniquement ˆtre modifi‚s … partir de la fiche campagne lorsque %3 = %4."';

    PROCEDURE CalcCurrentPrice@1(VAR PriceAlreadyExists@1000 : Boolean);
    VAR
      SalesPrice@1001 : Record 7002;
    BEGIN
      SalesPrice.SETRANGE("Item No.","Item No.");
      SalesPrice.SETRANGE("Sales Type","Sales Type");
      SalesPrice.SETRANGE("Sales Code","Sales Code");
      SalesPrice.SETRANGE("Currency Code","Currency Code");
      SalesPrice.SETRANGE("Unit of Measure Code","Unit of Measure Code");
      SalesPrice.SETRANGE("Starting Date",0D,"Starting Date");
      SalesPrice.SETRANGE("Minimum Quantity",0,"Minimum Quantity");
      SalesPrice.SETRANGE("Variant Code","Variant Code");
      IF SalesPrice.FINDLAST THEN BEGIN
        "Current Unit Price" := SalesPrice."Unit Price";
        "Price Includes VAT" := SalesPrice."Price Includes VAT";
        "Allow Line Disc." := SalesPrice."Allow Line Disc.";
        "Allow Invoice Disc." := SalesPrice."Allow Invoice Disc.";
        "VAT Bus. Posting Gr. (Price)" := SalesPrice."VAT Bus. Posting Gr. (Price)";
        PriceAlreadyExists := SalesPrice."Starting Date" = "Starting Date";
      END ELSE BEGIN
        "Current Unit Price" := 0;
        PriceAlreadyExists := FALSE;
      END;
    END;

    PROCEDURE SetSalesDescription@4();
    VAR
      Customer@1002 : Record 18;
      CustomerPriceGroup@1003 : Record 6;
      Campaign@1004 : Record 5071;
    BEGIN
      "Sales Description" := '';
      IF "Sales Code" = '' THEN
        EXIT;
      CASE "Sales Type" OF
        "Sales Type"::Customer:
          IF Customer.GET("Sales Code") THEN
            "Sales Description" := Customer.Name;
        "Sales Type"::"Customer Price Group":
          IF CustomerPriceGroup.GET("Sales Code") THEN
            "Sales Description" := CustomerPriceGroup.Description;
        "Sales Type"::Campaign:
          IF Campaign.GET("Sales Code") THEN
            "Sales Description" := Campaign.Description;
      END;
    END;

    BEGIN
    END.
  }
}

