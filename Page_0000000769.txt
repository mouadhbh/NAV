OBJECT Page 769 Aged Acc. Payable Chart
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Aged Accounts Payable;
               FRA=Comptabilit‚ fournisseur ƒg‚e];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table23;
    PageType=CardPart;
    ShowFilter=No;
    OnOpenPage=VAR
                 BusChartUserSetup@1000 : Record 487;
               BEGIN
                 BusChartUserSetup.InitSetupPage(PAGE::"Aged Acc. Payable Chart");
                 BusinessChartBuffer."Period Length" := BusChartUserSetup."Period Length";
               END;

    OnClosePage=VAR
                  BusChartUserSetup@1000 : Record 487;
                BEGIN
                  BusChartUserSetup."Period Length" := BusinessChartBuffer."Period Length";
                  BusChartUserSetup.SaveSetupPage(BusChartUserSetup,PAGE::"Aged Acc. Payable Chart");
                END;

    OnAfterGetRecord=BEGIN
                       IF PerVendor AND ("No." <> xRec."No.") THEN BEGIN
                         VendorNo := "No.";
                         UpdateChart;
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 6       ;1   ;Action    ;
                      Name=DayPeriod;
                      CaptionML=[ENU=Day;
                                 FRA=Jour];
                      ToolTipML=[ENU=Show pending payments summed for one day. Overdue payments are shown as amounts on specific days from the due date going back two weeks from today's date.;
                                 FRA=Affichez les paiements en attente additionn‚s pendant un jour. Les paiements dus sont affich‚s comme des montants sur des jours sp‚cifiques … partir de la date d'‚ch‚ance en remontant de deux semaines par rapport … la date du jour.];
                      Enabled=DayEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Day;
                                 UpdatePage;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=WeekPeriod;
                      CaptionML=[ENU=Week;
                                 FRA=Semaine];
                      ToolTipML=[ENU=Show pending payments summed for one week. Overdue payments are shown as amounts within specific weeks from the due date going back three months from today's date.;
                                 FRA=Affichez les paiements en attente additionn‚s pendant une semaine. Les paiements dus sont affich‚s comme des montants au sein de semaines sp‚cifiques … partir de la date d'‚ch‚ance en remontant de trois mois par rapport … la date du jour.];
                      Enabled=WeekEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Week;
                                 UpdatePage;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=MonthPeriod;
                      CaptionML=[ENU=Month;
                                 FRA=Mois];
                      ToolTipML=[ENU=Show pending payments summed for one month. Overdue payments are shown as amounts within specific months from the due date going back one year from today's date.;
                                 FRA=Affichez les paiements en attente additionn‚s pendant un mois. Les paiements dus sont affich‚s comme des montants au sein de mois sp‚cifiques … partir de la date d'‚ch‚ance en remontant d'une ann‚e par rapport … la date du jour.];
                      Enabled=MonthEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Month;
                                 UpdatePage;
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=QuarterPeriod;
                      CaptionML=[ENU=Quarter;
                                 FRA=Trimestre];
                      ToolTipML=[ENU=Show pending payments summed for one quarter. Overdue payments are shown as amounts within specific quarters from the due date going back three years from today's date.;
                                 FRA=Affichez les paiements en attente additionn‚s pendant un trimestre. Les paiements dus sont affich‚s comme des montants au sein de trimestres sp‚cifiques … partir de la date d'‚ch‚ance en remontant de trois ans par rapport … la date du jour.];
                      Enabled=QuarterEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Quarter;
                                 UpdatePage;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=YearPeriod;
                      CaptionML=[ENU=Year;
                                 FRA=Ann‚e];
                      ToolTipML=[ENU=Show pending payments summed for one year. Overdue payments are shown as amounts within specific years from the due date going back five years from today's date.;
                                 FRA=Affichez les paiements en attente additionn‚s pendant un an. Les paiements dus sont affich‚s comme des montants au sein d'ann‚es sp‚cifiques … partir de la date d'‚ch‚ance en remontant de cinq ann‚es par rapport … la date du jour.];
                      Enabled=YearEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Year;
                                 UpdatePage;
                               END;
                                }
      { 12      ;1   ;Action    ;
                      Name=All;
                      CaptionML=[ENU=All;
                                 FRA=Tous];
                      ToolTipML=[ENU=Show all accounts receivable in two columns, one with amounts not overdue and one with all overdue amounts.;
                                 FRA=Affichez tous les comptes clients en deuxÿcolonnes, l'une contenant les montants non dus et l'autre tous les montants dus.];
                      Enabled=AllEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::None;
                                 UpdatePage;
                               END;
                                }
      { 5       ;1   ;Separator  }
      { 11      ;1   ;Action    ;
                      Name=ChartInformation;
                      CaptionML=[ENU=Chart Information;
                                 FRA=Informations sur le graphique];
                      Image=Info;
                      OnAction=BEGIN
                                 MESSAGE(AgedAccPayable.Description(PerVendor));
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=ChartContainer;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                SourceExpr=StatusText;
                Editable=FALSE;
                ShowCaption=No }

    { 3   ;1   ;Field     ;
                Name=BusinessChart;
                ToolTipML=[ENU=Test;
                           FRA=Tester];
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      BusinessChartBuffer@1004 : Record 485;
      TempEntryNoAmountBuf@1012 : TEMPORARY Record 386;
      AgedAccPayable@1011 : Codeunit 764;
      isInitialized@1003 : Boolean;
      StatusText@1005 : Text;
      DayEnabled@1006 : Boolean;
      WeekEnabled@1007 : Boolean;
      MonthEnabled@1008 : Boolean;
      QuarterEnabled@1009 : Boolean;
      YearEnabled@1010 : Boolean;
      AllEnabled@1000 : Boolean;
      PerVendor@1001 : Boolean;
      VendorNo@1002 : Code[20];

    LOCAL PROCEDURE Initialize@4();
    BEGIN
      isInitialized := TRUE;
      UpdatePage;
    END;

    LOCAL PROCEDURE UpdatePage@2();
    BEGIN
      EnableActions;
      UpdateStatusText;
      UpdateChart;
    END;

    LOCAL PROCEDURE UpdateChart@1();
    BEGIN
      IF NOT isInitialized THEN
        EXIT;

      IF PerVendor AND (VendorNo = '') THEN
        EXIT;

      BusinessChartBuffer."Period Filter Start Date" := WORKDATE;
      IF PerVendor THEN
        AgedAccPayable.UpdateDataPerVendor(BusinessChartBuffer,VendorNo,TempEntryNoAmountBuf)
      ELSE
        AgedAccPayable.UpdateData(BusinessChartBuffer,TempEntryNoAmountBuf);
      BusinessChartBuffer.Update(CurrPage.BusinessChart);
    END;

    LOCAL PROCEDURE EnableActions@3();
    VAR
      IsDay@1001 : Boolean;
      IsWeek@1002 : Boolean;
      IsMonth@1003 : Boolean;
      IsQuarter@1004 : Boolean;
      IsYear@1005 : Boolean;
      IsAnyPeriod@1000 : Boolean;
    BEGIN
      IsAnyPeriod := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::None;
      IsDay := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Day;
      IsWeek := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Week;
      IsMonth := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Month;
      IsQuarter := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Quarter;
      IsYear := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Year;

      DayEnabled := (NOT IsDay AND isInitialized) OR IsAnyPeriod;
      WeekEnabled := (NOT IsWeek AND isInitialized) OR IsAnyPeriod;
      MonthEnabled := (NOT IsMonth AND isInitialized) OR IsAnyPeriod;
      QuarterEnabled := (NOT IsQuarter AND isInitialized) OR IsAnyPeriod;
      YearEnabled := (NOT IsYear AND isInitialized) OR IsAnyPeriod;
      AllEnabled := (NOT IsAnyPeriod) AND isInitialized;
    END;

    LOCAL PROCEDURE UpdateStatusText@5();
    BEGIN
      StatusText := AgedAccPayable.UpdateStatusText(BusinessChartBuffer);
    END;

    PROCEDURE SetPerVendor@9();
    BEGIN
      PerVendor := TRUE;
    END;

    EVENT BusinessChart@-3::DataPointClicked@1(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      BusinessChartBuffer.SetDrillDownIndexes(point);
      IF PerVendor THEN
        AgedAccPayable.DrillDown(BusinessChartBuffer,VendorNo,TempEntryNoAmountBuf)
      ELSE
        AgedAccPayable.DrillDownByGroup(BusinessChartBuffer,TempEntryNoAmountBuf);
    END;

    EVENT BusinessChart@-3::DataPointDoubleClicked@2(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-3::AddInReady@3();
    BEGIN
      Initialize;
    END;

    BEGIN
    END.
  }
}

