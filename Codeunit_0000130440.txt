OBJECT Codeunit 130440 Library - Random
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Seed@1000 : Integer;

    PROCEDURE RandDec@3(Range@1000 : Integer;Decimals@1001 : Integer) : Decimal;
    BEGIN
      EXIT(RandInt(Range * POWER(10,Decimals)) / POWER(10,Decimals));
    END;

    PROCEDURE RandDecInRange@5(Min@1000 : Integer;Max@1002 : Integer;Decimals@1001 : Integer) : Decimal;
    BEGIN
      // Returns a pseudo random decimal in the interval (Min,Max]
      EXIT(Min + RandDec(Max - Min,Decimals));
    END;

    PROCEDURE RandDecInDecimalRange@56(Min@1000 : Decimal;Max@1001 : Decimal;Precision@1002 : Integer) : Decimal;
    VAR
      Min2@1003 : Integer;
      Max2@1004 : Integer;
      Pow@1005 : Integer;
    BEGIN
      Pow := POWER(10,Precision);
      Min2 := ROUND(Min * Pow,1,'>');
      Max2 := ROUND(Max * Pow,1,'<');
      EXIT(RandIntInRange(Min2,Max2) / Pow);
    END;

    PROCEDURE RandInt@1(Range@1000 : Integer) : Integer;
    BEGIN
      // Returns a pseudo random integer in the interval [1,Range]
      IF Range < 1 THEN
        EXIT(1);
      EXIT(1 + ROUND(Uniform * (Range - 1),1));
    END;

    PROCEDURE RandIntInRange@4(Min@1000 : Integer;Max@1001 : Integer) : Integer;
    BEGIN
      EXIT(Min - 1 + RandInt(Max - Min + 1));
    END;

    PROCEDURE RandDate@16(Delta@1000 : Integer) : Date;
    BEGIN
      IF Delta = 0 THEN
        EXIT(WORKDATE);
      EXIT(CALCDATE(STRSUBSTNO('<%1D>',Delta / ABS(Delta) * RandInt(ABS(Delta))),WORKDATE));
    END;

    PROCEDURE RandDateFrom@11(FromDate@1000 : Date;Range@1001 : Integer) : Date;
    BEGIN
      IF Range = 0 THEN
        EXIT(FromDate);
      EXIT(CALCDATE(STRSUBSTNO('<%1D>',Range / ABS(Range) * RandInt(Range)),FromDate));
    END;

    PROCEDURE RandDateFromInRange@12(FromDate@1000 : Date;FromRange@1001 : Integer;ToRange@1002 : Integer) : Date;
    BEGIN
      IF FromRange >= ToRange THEN
        EXIT(FromDate);
      EXIT(CALCDATE(STRSUBSTNO('<+%1D>',RandIntInRange(FromRange,ToRange)),FromDate));
    END;

    PROCEDURE RandPrecision@6() : Decimal;
    BEGIN
      EXIT(1 / POWER(10,RandInt(5)));
    END;

    PROCEDURE Init@28() : Integer;
    BEGIN
      // Updates the seed from the current time
      EXIT(SetSeed(TIME - 000000T));
    END;

    PROCEDURE SetSeed@26(Val@1000 : Integer) : Integer;
    BEGIN
      // Set the random seed to reproduce pseudo random sequence
      Seed := Val;
      Seed := Seed MOD 10000;  // Overflow protection
      EXIT(Seed);
    END;

    LOCAL PROCEDURE UpdateSeed@48();
    BEGIN
      // Generates a new seed value and
      Seed := Seed + 3;
      Seed := Seed * 3;
      Seed := Seed * Seed;
      Seed := Seed MOD 10000;  // Overflow protection
    END;

    LOCAL PROCEDURE Uniform@2() : Decimal;
    BEGIN
      // Generates a pseudo random uniform number
      UpdateSeed;

      EXIT((Seed MOD 137) / 137);
    END;

    BEGIN
    {
      Pseudo random number generator.
    }
    END.
  }
}

