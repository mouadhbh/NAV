OBJECT Table 1300 Mini Customer Template
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               FieldRefArray@1001 : ARRAY [22] OF FieldRef;
               RecRef@1000 : RecordRef;
             BEGIN
               TESTFIELD("Template Name");
               RecRef.GETTABLE(Rec);
               CreateFieldRefArray(FieldRefArray,RecRef);

               InsertConfigurationTemplateHeaderAndLines;
             END;

    OnModify=VAR
               FieldRefArray@1000 : ARRAY [22] OF FieldRef;
               RecRef@1001 : RecordRef;
             BEGIN
               TESTFIELD(Code);
               TESTFIELD("Template Name");
               RecRef.GETTABLE(Rec);
               CreateFieldRefArray(FieldRefArray,RecRef);
               ConfigTemplateManagement.UpdateConfigTemplateAndLines(Code,"Template Name",DATABASE::Customer,FieldRefArray);
             END;

    OnDelete=VAR
               ConfigTemplateHeader@1000 : Record 8618;
             BEGIN
               IF ConfigTemplateHeader.GET(Code) THEN BEGIN
                 ConfigTemplateManagement.DeleteRelatedTemplates(Code,DATABASE::"Default Dimension");
                 ConfigTemplateHeader.DELETE(TRUE);
               END;
             END;

    CaptionML=[ENU=Mini Customer Template;
               FRA=ModŠle client mini];
  }
  FIELDS
  {
    { 1   ;   ;Key                 ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Key;
                                                              FRA=Cl‚] }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Template Name       ;Text50        ;CaptionML=[ENU=Template Name;
                                                              FRA=Nom modŠle];
                                                   NotBlank=Yes }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=VAR
                                                                PostCodeRec@1000 : Record 225;
                                                              BEGIN
                                                                IF City <> '' THEN BEGIN
                                                                  PostCodeRec.SETFILTER("Search City",City);

                                                                  CASE PostCodeRec.COUNT OF
                                                                    0:
                                                                      EXIT;
                                                                    1:
                                                                      PostCodeRec.FINDFIRST;
                                                                    ELSE
                                                                      IF PAGE.RUNMODAL(PAGE::"Post Codes",PostCodeRec,PostCodeRec.Code) <> ACTION::LookupOK THEN
                                                                        EXIT;
                                                                  END;

                                                                  "Post Code" := PostCodeRec.Code;
                                                                  "Country/Region Code" := PostCodeRec."Country/Region Code";
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              FRA=Ville] }
    { 11  ;   ;Document Sending Profile;Code20    ;TableRelation="Document Sending Profile".Code;
                                                   CaptionML=[ENU=Document Sending Profile;
                                                              FRA=Profil d'envoi de documents] }
    { 20  ;   ;Credit Limit (LCY)  ;Decimal       ;CaptionML=[ENU=Credit Limit (LCY);
                                                              FRA=Cr‚dit autoris‚ DS];
                                                   AutoFormatType=1 }
    { 21  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              FRA=Groupe compta. client] }
    { 22  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              FRA=Code devise] }
    { 23  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              FRA=Groupe prix client] }
    { 24  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              FRA=Code langue] }
    { 27  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              FRA=Code conditions paiement] }
    { 28  ;   ;Fin. Charge Terms Code;Code10      ;TableRelation="Finance Charge Terms";
                                                   CaptionML=[ENU=Fin. Charge Terms Code;
                                                              FRA=Code condition int‚rˆts] }
    { 34  ;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              FRA=Groupe rem. client] }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays/r‚gion] }
    { 42  ;   ;Print Statements    ;Boolean       ;CaptionML=[ENU=Print Statements;
                                                              FRA=Imprimer relev‚s] }
    { 47  ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Payment Method Code;
                                                              FRA=Code mode de rŠglement] }
    { 80  ;   ;Application Method  ;Option        ;CaptionML=[ENU=Application Method;
                                                              FRA=Mode de lettrage];
                                                   OptionCaptionML=[ENU=Manual,Apply to Oldest;
                                                                    FRA=Manuel,Au plus ancien];
                                                   OptionString=Manual,Apply to Oldest }
    { 82  ;   ;Prices Including VAT;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              FRA=Prix TTC] }
    { 88  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              FRA=Groupe compta. march‚] }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=VAR
                                                                PostCodeRec@1000 : Record 225;
                                                              BEGIN
                                                                IF "Post Code" <> '' THEN BEGIN
                                                                  PostCodeRec.SETFILTER(Code,"Post Code");

                                                                  CASE PostCodeRec.COUNT OF
                                                                    0:
                                                                      EXIT;
                                                                    1:
                                                                      PostCodeRec.FINDFIRST;
                                                                    ELSE
                                                                      IF PAGE.RUNMODAL(PAGE::"Post Codes",PostCodeRec,PostCodeRec.Code) <> ACTION::LookupOK THEN
                                                                        EXIT;
                                                                  END;

                                                                  City := PostCodeRec.City;
                                                                  "Country/Region Code" := PostCodeRec."Country/Region Code";
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              FRA=Code postal] }
    { 92  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              FRA=R‚gion] }
    { 104 ;   ;Reminder Terms Code ;Code10        ;TableRelation="Reminder Terms";
                                                   CaptionML=[ENU=Reminder Terms Code;
                                                              FRA=Code condition relance] }
    { 110 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              FRA=Groupe compta. march‚ TVA] }
    { 116 ;   ;Block Payment Tolerance;Boolean    ;CaptionML=[ENU=Block Payment Tolerance;
                                                              FRA=Bloquer ‚cart de rŠglement] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              FRA=Autoriser remise ligne] }
  }
  KEYS
  {
    {    ;Key                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ConfigTemplateManagement@1000 : Codeunit 8612;

    PROCEDURE CreateFieldRefArray@12(VAR FieldRefArray@1000 : ARRAY [22] OF FieldRef;RecRef@1003 : RecordRef);
    VAR
      I@1002 : Integer;
    BEGIN
      I := 1;

      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO(City)));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Document Sending Profile")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Credit Limit (LCY)")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Customer Posting Group")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Currency Code")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Customer Price Group")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Language Code")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Payment Terms Code")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Fin. Charge Terms Code")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Customer Disc. Group")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Country/Region Code")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Print Statements")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Payment Method Code")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Application Method")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Prices Including VAT")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Gen. Bus. Posting Group")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Post Code")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO(County)));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Reminder Terms Code")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("VAT Bus. Posting Group")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Block Payment Tolerance")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Allow Line Disc.")));
    END;

    LOCAL PROCEDURE AddToArray@4(VAR FieldRefArray@1000 : ARRAY [23] OF FieldRef;VAR I@1001 : Integer;CurrFieldRef@1002 : FieldRef);
    BEGIN
      FieldRefArray[I] := CurrFieldRef;
      I += 1;
    END;

    PROCEDURE InitializeTempRecordFromConfigTemplate@1(VAR TempMiniCustomerTemplate@1000 : TEMPORARY Record 1300;ConfigTemplateHeader@1001 : Record 8618);
    VAR
      RecRef@1003 : RecordRef;
    BEGIN
      TempMiniCustomerTemplate.INIT;
      TempMiniCustomerTemplate.Code := ConfigTemplateHeader.Code;
      TempMiniCustomerTemplate."Template Name" := ConfigTemplateHeader.Description;
      TempMiniCustomerTemplate.INSERT;

      RecRef.GETTABLE(TempMiniCustomerTemplate);

      ConfigTemplateManagement.ApplyTemplateLinesWithoutValidation(ConfigTemplateHeader,RecRef);

      RecRef.SETTABLE(TempMiniCustomerTemplate);
    END;

    PROCEDURE CreateConfigTemplateFromExistingCustomer@5(Customer@1000 : Record 18;VAR TempMiniCustomerTemplate@1001 : TEMPORARY Record 1300);
    VAR
      MiniDimensionsTemplate@1002 : Record 1302;
      ConfigTemplateHeader@1006 : Record 8618;
      RecRef@1005 : RecordRef;
      FieldRefArray@1004 : ARRAY [22] OF FieldRef;
      NewTemplateCode@1003 : Code[10];
    BEGIN
      RecRef.GETTABLE(Customer);
      CreateFieldRefArray(FieldRefArray,RecRef);

      ConfigTemplateManagement.CreateConfigTemplateAndLines(NewTemplateCode,'',DATABASE::Customer,FieldRefArray);
      ConfigTemplateHeader.GET(NewTemplateCode);
      MiniDimensionsTemplate.CreateTemplatesFromExistingMasterRecord(Customer."No.",NewTemplateCode,DATABASE::Customer);
      InitializeTempRecordFromConfigTemplate(TempMiniCustomerTemplate,ConfigTemplateHeader);
    END;

    PROCEDURE SaveAsTemplate@7(Customer@1000 : Record 18);
    VAR
      TempMiniCustomerTemplate@1001 : TEMPORARY Record 1300;
      MiniCustomerTemplateCard@1002 : Page 1341;
    BEGIN
      MiniCustomerTemplateCard.CreateFromCust(Customer);
      MiniCustomerTemplateCard.SETRECORD(TempMiniCustomerTemplate);
      MiniCustomerTemplateCard.LOOKUPMODE := TRUE;
      IF MiniCustomerTemplateCard.RUNMODAL = ACTION::LookupOK THEN;
    END;

    LOCAL PROCEDURE InsertConfigurationTemplateHeaderAndLines@2();
    VAR
      FieldRefArray@1001 : ARRAY [22] OF FieldRef;
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      CreateFieldRefArray(FieldRefArray,RecRef);
      ConfigTemplateManagement.CreateConfigTemplateAndLines(Code,"Template Name",DATABASE::Customer,FieldRefArray);
    END;

    PROCEDURE NewCustomerFromTemplate@3() : Code[20];
    VAR
      Customer@1000 : Record 18;
      ConfigTemplateHeader@1004 : Record 8618;
      MiniConfigTemplates@1001 : Page 1340;
    BEGIN
      ConfigTemplateHeader.SETRANGE("Table ID",DATABASE::Customer);
      CASE ConfigTemplateHeader.COUNT OF
        0:
          Customer.INSERT(TRUE);
        1:
          BEGIN
            ConfigTemplateHeader.FINDFIRST;
            InsertCustomerFromTemplate(ConfigTemplateHeader,Customer);
          END;
        ELSE BEGIN
          MiniConfigTemplates.SETTABLEVIEW(ConfigTemplateHeader);
          MiniConfigTemplates.LOOKUPMODE(TRUE);
          IF MiniConfigTemplates.RUNMODAL = ACTION::LookupOK THEN BEGIN
            MiniConfigTemplates.GETRECORD(ConfigTemplateHeader);
            InsertCustomerFromTemplate(ConfigTemplateHeader,Customer);
          END ELSE
            EXIT;
        END;
      END;

      EXIT(Customer."No.");
    END;

    LOCAL PROCEDURE OpenCustomerCardWithNewCustomerFromTemplate@6();
    VAR
      Customer@1000 : Record 18;
      NewCustomerCode@1002 : Code[20];
    BEGIN
      NewCustomerCode := NewCustomerFromTemplate;

      IF NewCustomerCode <> '' THEN BEGIN
        Customer.GET(NewCustomerCode);
        PAGE.RUN(PAGE::"Mini Customer Card",Customer);
      END;
    END;

    PROCEDURE InsertCustomerFromTemplate@16(ConfigTemplateHeader@1006 : Record 8618;VAR Customer@1003 : Record 18);
    VAR
      MiniDimensionsTemplate@1001 : Record 1302;
      ConfigTemplateMgt@1002 : Codeunit 8612;
      RecRef@1000 : RecordRef;
    BEGIN
      Customer.INSERT(TRUE);
      RecRef.GETTABLE(Customer);
      ConfigTemplateMgt.UpdateRecord(ConfigTemplateHeader,RecRef);
      RecRef.SETTABLE(Customer);

      MiniDimensionsTemplate.InsertDimensionsFromTemplates(ConfigTemplateHeader,Customer."No.",DATABASE::Customer);
    END;

    BEGIN
    END.
  }
}

